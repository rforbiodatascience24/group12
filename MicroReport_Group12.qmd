---
title: "Micro-Report_Lecture7"
author: "Group12"
format: html
editor: visual
---

## Micro report

Necessary Packages

```{r}
library("tidyverse")
library(broom)  # devtools::install_github("tidymodels/broom")
library(cowplot)
```

#### Load data (Agnes)

```{r}
target_url <- "https://github.com/ramhiser/datamicroarray/raw/master/data/gravier.RData"
output_file <- "data/gravier.RData"
curl::curl_download(url = target_url,
                    destfile = output_file)

load("data/gravier.RData")

```

Wrangle data:

```{r}

set.seed(676571)
cancer_data=mutate(as_tibble(pluck(gravier,"x")),y=pluck(gravier,"y"),pt_id=1:length(pluck(gravier, "y")),age=round(rnorm(length(pluck(gravier,"y")),mean=55,sd=10),1))
cancer_data=rename(cancer_data,event_label=y)
cancer_data$age_group=cut(cancer_data$age,breaks=seq(10,100,by=10))
cancer_data=relocate(cancer_data,c(pt_id,age,age_group,pt_id,event_label))
```

#### Data handling (Julie og Freja)

Boxplot:

```{r}
ggplot(cancer_data, aes(age_group,g2E09))+geom_boxplot()
```

Favorite gene boxplot:

```{r}
ggplot(cancer_data, aes(age_group,g2E09, color=event_label))+geom_boxplot(alpha=0.7) + labs(title="Boxplots of expression level of our favorite gene", x="Age Group",y="Gen: g2E09", color= "Event Label")
```

Very cool plot:

```{r}
ggplot(cancer_data, 
       aes(age,
           g1int239, 
           color=event_label))+
  geom_point(shape=21,
             stroke=0.5,
             aes(fill=event_label),color="black") + 
  geom_smooth(method = "lm", level=0)+ 
  labs(title="A prognostic DNA signature for T1T2 node-negative breast cancer patients", 
       subtitle="Stratified on labelling: good= no event, poor = early metastasis", 
       x= "Expression level of g1CNS507 (log2 transformed",
       y="Event After Diagnosis", caption="Data from Gravier", 
       color="Label", 
       fill="Label")+
  theme(legend.position="bottom")
```

#### Plotting the data as a PCA (Cecille og Mille)

```{r}
pca_fit <- cancer_data |>
  select(where(is.numeric)) |>
  prcomp(scale = TRUE) 
```

```{r}
pca_fit <- cancer_data %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  scale() %>% # scale data
  prcomp() # do PCA
```

```{r}
pca_fit |>
  augment(cancer_data) |> # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = event_label)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(good = "#D55E00", poor = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```
